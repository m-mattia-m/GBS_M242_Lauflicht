A51 MACRO ASSEMBLER  LAUFLICHT                                                            06/09/2021 21:13:15 PAGE     1


MACRO ASSEMBLER A51 V8.00
OBJECT MODULE PLACED IN STARTUP.OBJ
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\A51.EXE STARTUP.A51 SET(SMALL) DEBUG EP

LOC  OBJ            LINE     SOURCE

                       1     ;********************************************************************************
                       2     ; P R O G R A M M    Vorlage
                       3     ;********************************************************************************
                       4     ; Source-File:          Lauflicht.a51
                       5     ; Autor:                Kay Wild, Christophe Damas, Mattia Müggler
                       6     ; Datum:                05.06.2021
                       7     ; Version:              2.0
                       8     ; Beschreibung:         Lauflicht
                       9     ; Eingaben:             8 Schalter S0 bis S7
                      10     ; Ausgaben:             8 LEDs PA0 bis PA7
                      11     ;********************************************************************************
                      12          
                      13     $title  (Lauflicht)
                     252     $list 
                     253      
                     254     NAME Lauflicht
                     255      
                     256     ;----- Deklarationen
  00B0               257     input       equ     P3                                      ; P3 8 Eingänge
  00A0               258     output      equ     P2                                      ; P2 8 Ausgänge
  0020               259     llStatus        data    20h                                                         ; ll ->
                              LaufLichtStatus
  0021               260     dStatus         data    21h                                                         ; Direc
                             tionStatus -> bool-Variable die sagt, ob als letztes das Licht Vor- oder Rückwärts gegangen ist
  0022               261     fast            data    22h                                                         ; dekla
                             riert geschwindigkeit -> bool-Variable die entweder schnell oder langsam ist
                     262      
                     263     ;----- Intitialisierung
0000                 264                 ORG     0000h                                   ; Startadresse
0000 2100            265                 jmp     init                                ; geht zu init
                     266      
0100                 267                 ORG     0100h                                   ; Programmanfang
0100 75FFDE          268     init:       mov     WDTCN,#0DEh
0103 75FFAD          269                 mov     WDTCN,#0ADh                             ; deaktiviert Watchdog
0106 75A6FF          270                 mov     P2MDOUT,#0FFh                           ; P2 8 Ausgänge 
0109 75A700          271                 mov     P3MDOUT,#000h                           ; P3 8 Eingänge
010C 75E340          272                 mov     XBR2,#040h                              ; aktiviert crossbar (Koppelfel
                             d)
                     273      
                     274     ;------ Hauptprogramm
010F 75A000          275     main:       mov     output,#00h                             ;LEDs dunkel schalten
0112 75B000          276                         mov     input, #00h
0115 7400            277                         mov     A,#0h
                     278     
                     279     ;------ Schleife
0117                 280     loop:
0117 30B205          281                 jnb         input.2, fastFalse
011A 752206          282                         mov         fast, #6h                                               ; n
                             och ÄNDERN --> wert für Wait anpassen wenn schnell
011D 8003            283                         jmp         fastEnd
                     284                 
011F                 285     fastFalse:
011F 752260          286                         mov     fast, #60h;                                             ; noch 
                             ÄNDERN --> wert für Wait anpassen wenn langsam
                     287     
0122                 288     fastEnd:        
                     289        
0122 20B35C          290                 jb      input.3, CBitBack ;Endlosschleife
A51 MACRO ASSEMBLER  LAUFLICHT                                                            06/09/2021 21:13:15 PAGE     2

0125 804B            291                         jmp         CBit
                     292     
                     293     ;------ Licht anschalten Vorwärts
0127                 294     lightsUp: 
0127 316B            295                         CALL        compare
0129 30B403          296                         jnb         input.4, lightsUpTrue
012C 23              297                         rl          A
012D 2401            298                         add         A, #1h
                     299     
                     300     ;------ Licht anschalten Vorwärts Breit
012F                 301     lightsUpTrue:
012F 23              302                         rl          A
0130 2401            303                         add         A, #1h
0132 F5A0            304                         mov         output, A
0134 3190            305                         CALL        wait
0136 80DF            306                         jmp         loop
                     307     
                     308     ;------ Licht ausschalten Vorwärts
0138                 309     lightsDown:     
0138 316B            310                         CALL        compare
013A 30B403          311                         jnb         input.4, lightsDownTrue
013D 23              312                         rl          A
013E 9401            313                         subb        A, #1h
                     314     
                     315     ;------ Licht ausschalten Vorwärts Breit
0140                 316     lightsDownTrue:
0140 23              317                         rl          A
0141 9401            318                         subb        A, #1h
0143 F5A0            319                         mov         output, A
0145 3190            320                         CALL        wait
0147 80CE            321                         jmp         loop
                     322     
                     323     ;------ Licht anschalten Rückwärts
0149                 324     lightsUpBack: 
0149 316B            325                         CALL        compare
014B 30B403          326                         jnb         input.4, lightsUpBackTrue
014E 2401            327                         add         A, #1h
0150 03              328                         rr          A
                     329     
                     330     ;------ Licht anschalten Rückwärts Breit
0151                 331     lightsUpBackTrue:
0151 2401            332                         add         A, #1h
0153 03              333                         rr          A
0154 F5A0            334                         mov         output, A
0156 3190            335                         CALL        wait
0158 80BD            336                         jmp         loop
                     337     
                     338     ;------ Licht ausschalten Rückwärts
015A                 339     lightsDownBack: 
015A 316B            340                         CALL        compare
015C 30B403          341                         jnb         input.4, lightsDownBackTrue
015F 9401            342                         subb        A, #1h 
0161 03              343                         rr          A
                     344     
                     345     ;------ Licht ausschalten Rückwärts Breit
0162                 346     lightsDownBackTrue:
0162 9401            347                         subb        A, #1h 
0164 03              348                         rr          A
0165 F5A0            349                         mov         output, A
0167 3190            350                         CALL        wait
0169 80AC            351                         jmp         loop
                     352      
                     353     ;----- überprüft ob stop oder pasue gedrückt wurde
016B                 354     compare:           
016B 20B0FD          355                 JB      input.0, compare
016E 20B130          356                 JB      input.1, reset
A51 MACRO ASSEMBLER  LAUFLICHT                                                            06/09/2021 21:13:15 PAGE     3

0171 22              357                 RET
                     358     
                     359     ;----- überprüft Richtung und wenn Schalter gedrückt geht zu CBitTrue (Wenn Vorwärts)
0172                 360     CBit:   
0172 200805          361                 jb          dStatus.0, CBitTrue
0175 7400            362                         mov         A, #0h
0177 752101          363                         mov         dStatus, #1h
                     364     
                     365     ;----- Setzt neue Richtung (wenn Vorwärts)
017A                 366     CBitTrue:       
017A F520            367                         mov         llStatus, A
017C 2007B9          368                         jb          llStatus.7, lightsDown
017F 80A6            369                         jmp         lightsUp 
                     370     
                     371     ;----- überprüft Richtung und wenn Schalter gedrückt geht zu CBitBackTrue (Wenn Rückwärts)
0181                 372     CBitBack:       
0181 300805          373                 jnb     dStatus.0, CBitBackTrue
0184 7400            374                             mov     A, #0h
0186 752100          375                             mov             dStatus, #0h
                     376                             
                     377     ;----- Setzt neue Richtung (wenn Rückwärts)
0189                 378     CBitBackTrue:
0189 F520            379                             mov     llStatus, A
018B 2000CC          380                             jb      llStatus.0, lightsDownBack
018E 80B9            381                             jmp         lightsUpBack         
                     382     
                     383     ;----- Start Delay
0190 7DFF            384     wait:       mov     R5, #0FFh                               ; mit wait wird der Delay aufge
                             rufen, und hier wird auf das Register verschiedene Werte gesetzt und Schleifen ineinander aufgerufen
0192 7EFF            385     wait1:      mov     R6, #0FFh
0194 7F05            386     wait2:      mov     R7, #05h
0196 AC22            387     wait3:      mov     R4, fast                                    ; noch ÄNDERN --> bei Mesa 
                             wait 4 wieder entfernen
0198 DCFE            388     wait4:      djnz    R4, wait4
019A DFFA            389                         djnz    R7, wait3
019C DEF6            390                 djnz    R6, wait2
019E DDF2            391                 djnz    R5, wait1
01A0 22              392                 ret
                     393     
                     394     ;----- Start Reset (Stop)
01A1 75A000          395     reset:      mov     output,#00h                         ; setzt die LEDs und den Akumulator
                              zurück und geht wider in die Loop
01A4 7400            396                         mov     A, #0h
01A6 2117            397                         jmp     loop
                     398                 END
A51 MACRO ASSEMBLER  LAUFLICHT                                                            06/09/2021 21:13:15 PAGE     4

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

AA . . . . . . . .  B ADDR   00C0H.2 A   
AC . . . . . . . .  B ADDR   00D0H.6 A   
ACC. . . . . . . .  D ADDR   00E0H   A   
AD0BUSY. . . . . .  B ADDR   00E8H.4 A   
AD0CM0 . . . . . .  B ADDR   00E8H.2 A   
AD0CM1 . . . . . .  B ADDR   00E8H.3 A   
AD0EN. . . . . . .  B ADDR   00E8H.7 A   
AD0INT . . . . . .  B ADDR   00E8H.5 A   
AD0LJST. . . . . .  B ADDR   00E8H.0 A   
AD0TM. . . . . . .  B ADDR   00E8H.6 A   
AD0WINT. . . . . .  B ADDR   00E8H.1 A   
ADC0CF . . . . . .  D ADDR   00BCH   A   
ADC0CN . . . . . .  D ADDR   00E8H   A   
ADC0GTH. . . . . .  D ADDR   00C5H   A   
ADC0GTL. . . . . .  D ADDR   00C4H   A   
ADC0H. . . . . . .  D ADDR   00BFH   A   
ADC0L. . . . . . .  D ADDR   00BEH   A   
ADC0LTH. . . . . .  D ADDR   00C7H   A   
ADC0LTL. . . . . .  D ADDR   00C6H   A   
ADC1 . . . . . . .  D ADDR   009CH   A   
ADC1CF . . . . . .  D ADDR   00ABH   A   
ADC1CN . . . . . .  D ADDR   00AAH   A   
AMX0CF . . . . . .  D ADDR   00BAH   A   
AMX0SL . . . . . .  D ADDR   00BBH   A   
AMX1SL . . . . . .  D ADDR   00ACH   A   
B. . . . . . . . .  D ADDR   00F0H   A   
BUSY . . . . . . .  B ADDR   00C0H.7 A   
CBIT . . . . . . .  C ADDR   0172H   A   
CBITBACK . . . . .  C ADDR   0181H   A   
CBITBACKTRUE . . .  C ADDR   0189H   A   
CBITTRUE . . . . .  C ADDR   017AH   A   
CCF0 . . . . . . .  B ADDR   00D8H.0 A   
CCF1 . . . . . . .  B ADDR   00D8H.1 A   
CCF2 . . . . . . .  B ADDR   00D8H.2 A   
CCF3 . . . . . . .  B ADDR   00D8H.3 A   
CCF4 . . . . . . .  B ADDR   00D8H.4 A   
CF . . . . . . . .  B ADDR   00D8H.7 A   
CKCON. . . . . . .  D ADDR   008EH   A   
COMPARE. . . . . .  C ADDR   016BH   A   
CPRL2. . . . . . .  B ADDR   00C8H.0 A   
CPT0CN . . . . . .  D ADDR   009EH   A   
CPT1CN . . . . . .  D ADDR   009FH   A   
CR . . . . . . . .  B ADDR   00D8H.6 A   
CT2. . . . . . . .  B ADDR   00C8H.1 A   
CY . . . . . . . .  B ADDR   00D0H.7 A   
DAC0CN . . . . . .  D ADDR   00D4H   A   
DAC0H. . . . . . .  D ADDR   00D3H   A   
DAC0L. . . . . . .  D ADDR   00D2H   A   
DAC1CN . . . . . .  D ADDR   00D7H   A   
DAC1H. . . . . . .  D ADDR   00D6H   A   
DAC1L. . . . . . .  D ADDR   00D5H   A   
DPH. . . . . . . .  D ADDR   0083H   A   
DPL. . . . . . . .  D ADDR   0082H   A   
DSTATUS. . . . . .  D ADDR   0021H   A   
EA . . . . . . . .  B ADDR   00A8H.7 A   
EIE1 . . . . . . .  D ADDR   00E6H   A   
EIE2 . . . . . . .  D ADDR   00E7H   A   
EIP1 . . . . . . .  D ADDR   00F6H   A   
EIP2 . . . . . . .  D ADDR   00F7H   A   
EMI0CF . . . . . .  D ADDR   00A3H   A   
A51 MACRO ASSEMBLER  LAUFLICHT                                                            06/09/2021 21:13:15 PAGE     5

EMI0CN . . . . . .  D ADDR   00AFH   A   
EMI0TC . . . . . .  D ADDR   00A1H   A   
ENSMB. . . . . . .  B ADDR   00C0H.6 A   
ES0. . . . . . . .  B ADDR   00A8H.4 A   
ET0. . . . . . . .  B ADDR   00A8H.1 A   
ET1. . . . . . . .  B ADDR   00A8H.3 A   
ET2. . . . . . . .  B ADDR   00A8H.5 A   
EX0. . . . . . . .  B ADDR   00A8H.0 A   
EX1. . . . . . . .  B ADDR   00A8H.2 A   
EXEN2. . . . . . .  B ADDR   00C8H.3 A   
EXF2 . . . . . . .  B ADDR   00C8H.6 A   
F0 . . . . . . . .  B ADDR   00D0H.5 A   
F1 . . . . . . . .  B ADDR   00D0H.1 A   
FAST . . . . . . .  D ADDR   0022H   A   
FASTEND. . . . . .  C ADDR   0122H   A   
FASTFALSE. . . . .  C ADDR   011FH   A   
FLACL. . . . . . .  D ADDR   00B7H   A   
FLSCL. . . . . . .  D ADDR   00B6H   A   
IE . . . . . . . .  D ADDR   00A8H   A   
IE0. . . . . . . .  B ADDR   0088H.1 A   
IE1. . . . . . . .  B ADDR   0088H.3 A   
INIT . . . . . . .  C ADDR   0100H   A   
INPUT. . . . . . .  D ADDR   00B0H   A   
IP . . . . . . . .  D ADDR   00B8H   A   
IT0. . . . . . . .  B ADDR   0088H.0 A   
IT1. . . . . . . .  B ADDR   0088H.2 A   
LAUFLICHT. . . . .  N NUMB   -----       
LIGHTSDOWN . . . .  C ADDR   0138H   A   
LIGHTSDOWNBACK . .  C ADDR   015AH   A   
LIGHTSDOWNBACKTRUE  C ADDR   0162H   A   
LIGHTSDOWNTRUE . .  C ADDR   0140H   A   
LIGHTSUP . . . . .  C ADDR   0127H   A   
LIGHTSUPBACK . . .  C ADDR   0149H   A   
LIGHTSUPBACKTRUE .  C ADDR   0151H   A   
LIGHTSUPTRUE . . .  C ADDR   012FH   A   
LLSTATUS . . . . .  D ADDR   0020H   A   
LOOP . . . . . . .  C ADDR   0117H   A   
MAIN . . . . . . .  C ADDR   010FH   A   
MODF . . . . . . .  B ADDR   00F8H.5 A   
MSTEN. . . . . . .  B ADDR   00F8H.1 A   
OSCICN . . . . . .  D ADDR   00B2H   A   
OSCXCN . . . . . .  D ADDR   00B1H   A   
OUTPUT . . . . . .  D ADDR   00A0H   A   
OV . . . . . . . .  B ADDR   00D0H.2 A   
P. . . . . . . . .  B ADDR   00D0H.0 A   
P0 . . . . . . . .  D ADDR   0080H   A   
P0MDOUT. . . . . .  D ADDR   00A4H   A   
P1 . . . . . . . .  D ADDR   0090H   A   
P1MDIN . . . . . .  D ADDR   00BDH   A   
P1MDOUT. . . . . .  D ADDR   00A5H   A   
P2 . . . . . . . .  D ADDR   00A0H   A   
P2MDOUT. . . . . .  D ADDR   00A6H   A   
P3 . . . . . . . .  D ADDR   00B0H   A   
P3IF . . . . . . .  D ADDR   00ADH   A   
P3MDOUT. . . . . .  D ADDR   00A7H   A   
P4 . . . . . . . .  D ADDR   0084H   A   
P5 . . . . . . . .  D ADDR   0085H   A   
P6 . . . . . . . .  D ADDR   0086H   A   
P7 . . . . . . . .  D ADDR   0096H   A   
P74OUT . . . . . .  D ADDR   00B5H   A   
PCA0CN . . . . . .  D ADDR   00D8H   A   
PCA0CPH0 . . . . .  D ADDR   00FAH   A   
PCA0CPH1 . . . . .  D ADDR   00FBH   A   
PCA0CPH2 . . . . .  D ADDR   00FCH   A   
PCA0CPH3 . . . . .  D ADDR   00FDH   A   
PCA0CPH4 . . . . .  D ADDR   00FEH   A   
A51 MACRO ASSEMBLER  LAUFLICHT                                                            06/09/2021 21:13:15 PAGE     6

PCA0CPL0 . . . . .  D ADDR   00EAH   A   
PCA0CPL1 . . . . .  D ADDR   00EBH   A   
PCA0CPL2 . . . . .  D ADDR   00ECH   A   
PCA0CPL3 . . . . .  D ADDR   00EDH   A   
PCA0CPL4 . . . . .  D ADDR   00EEH   A   
PCA0CPM0 . . . . .  D ADDR   00DAH   A   
PCA0CPM1 . . . . .  D ADDR   00DBH   A   
PCA0CPM2 . . . . .  D ADDR   00DCH   A   
PCA0CPM3 . . . . .  D ADDR   00DDH   A   
PCA0CPM4 . . . . .  D ADDR   00DEH   A   
PCA0H. . . . . . .  D ADDR   00F9H   A   
PCA0L. . . . . . .  D ADDR   00E9H   A   
PCA0MD . . . . . .  D ADDR   00D9H   A   
PCON . . . . . . .  D ADDR   0087H   A   
PS . . . . . . . .  B ADDR   00B8H.4 A   
PSCTL. . . . . . .  D ADDR   008FH   A   
PSW. . . . . . . .  D ADDR   00D0H   A   
PT0. . . . . . . .  B ADDR   00B8H.1 A   
PT1. . . . . . . .  B ADDR   00B8H.3 A   
PT2. . . . . . . .  B ADDR   00B8H.5 A   
PX0. . . . . . . .  B ADDR   00B8H.0 A   
PX1. . . . . . . .  B ADDR   00B8H.2 A   
RB80 . . . . . . .  B ADDR   0098H.2 A   
RCAP2H . . . . . .  D ADDR   00CBH   A   
RCAP2L . . . . . .  D ADDR   00CAH   A   
RCAP4H . . . . . .  D ADDR   00E5H   A   
RCAP4L . . . . . .  D ADDR   00E4H   A   
RCLK0. . . . . . .  B ADDR   00C8H.5 A   
REF0CN . . . . . .  D ADDR   00D1H   A   
REN0 . . . . . . .  B ADDR   0098H.4 A   
RESET. . . . . . .  C ADDR   01A1H   A   
RI0. . . . . . . .  B ADDR   0098H.0 A   
RS0. . . . . . . .  B ADDR   00D0H.3 A   
RS1. . . . . . . .  B ADDR   00D0H.4 A   
RSTSRC . . . . . .  D ADDR   00EFH   A   
RXOVRN . . . . . .  B ADDR   00F8H.4 A   
SADDR0 . . . . . .  D ADDR   00A9H   A   
SADDR1 . . . . . .  D ADDR   00F3H   A   
SADEN0 . . . . . .  D ADDR   00B9H   A   
SADEN1 . . . . . .  D ADDR   00AEH   A   
SBUF0. . . . . . .  D ADDR   0099H   A   
SBUF1. . . . . . .  D ADDR   00F2H   A   
SCON0. . . . . . .  D ADDR   0098H   A   
SCON1. . . . . . .  D ADDR   00F1H   A   
SI . . . . . . . .  B ADDR   00C0H.3 A   
SLVSEL . . . . . .  B ADDR   00F8H.2 A   
SM00 . . . . . . .  B ADDR   0098H.7 A   
SM10 . . . . . . .  B ADDR   0098H.6 A   
SM20 . . . . . . .  B ADDR   0098H.5 A   
SMB0ADR. . . . . .  D ADDR   00C3H   A   
SMB0CN . . . . . .  D ADDR   00C0H   A   
SMB0CR . . . . . .  D ADDR   00CFH   A   
SMB0DAT. . . . . .  D ADDR   00C2H   A   
SMB0STA. . . . . .  D ADDR   00C1H   A   
SMBFTE . . . . . .  B ADDR   00C0H.1 A   
SMBTOE . . . . . .  B ADDR   00C0H.0 A   
SP . . . . . . . .  D ADDR   0081H   A   
SPI0CFG. . . . . .  D ADDR   009AH   A   
SPI0CKR. . . . . .  D ADDR   009DH   A   
SPI0CN . . . . . .  D ADDR   00F8H   A   
SPI0DAT. . . . . .  D ADDR   009BH   A   
SPIEN. . . . . . .  B ADDR   00F8H.0 A   
SPIF . . . . . . .  B ADDR   00F8H.7 A   
STA. . . . . . . .  B ADDR   00C0H.5 A   
STO. . . . . . . .  B ADDR   00C0H.4 A   
T2CON. . . . . . .  D ADDR   00C8H   A   
A51 MACRO ASSEMBLER  LAUFLICHT                                                            06/09/2021 21:13:15 PAGE     7

T4CON. . . . . . .  D ADDR   00C9H   A   
TB80 . . . . . . .  B ADDR   0098H.3 A   
TCLK0. . . . . . .  B ADDR   00C8H.4 A   
TCON . . . . . . .  D ADDR   0088H   A   
TF0. . . . . . . .  B ADDR   0088H.5 A   
TF1. . . . . . . .  B ADDR   0088H.7 A   
TF2. . . . . . . .  B ADDR   00C8H.7 A   
TH0. . . . . . . .  D ADDR   008CH   A   
TH1. . . . . . . .  D ADDR   008DH   A   
TH2. . . . . . . .  D ADDR   00CDH   A   
TH4. . . . . . . .  D ADDR   00F5H   A   
TI0. . . . . . . .  B ADDR   0098H.1 A   
TL0. . . . . . . .  D ADDR   008AH   A   
TL1. . . . . . . .  D ADDR   008BH   A   
TL2. . . . . . . .  D ADDR   00CCH   A   
TL4. . . . . . . .  D ADDR   00F4H   A   
TMOD . . . . . . .  D ADDR   0089H   A   
TMR3CN . . . . . .  D ADDR   0091H   A   
TMR3H. . . . . . .  D ADDR   0095H   A   
TMR3L. . . . . . .  D ADDR   0094H   A   
TMR3RLH. . . . . .  D ADDR   0093H   A   
TMR3RLL. . . . . .  D ADDR   0092H   A   
TR0. . . . . . . .  B ADDR   0088H.4 A   
TR1. . . . . . . .  B ADDR   0088H.6 A   
TR2. . . . . . . .  B ADDR   00C8H.2 A   
TXBSY. . . . . . .  B ADDR   00F8H.3 A   
WAIT . . . . . . .  C ADDR   0190H   A   
WAIT1. . . . . . .  C ADDR   0192H   A   
WAIT2. . . . . . .  C ADDR   0194H   A   
WAIT3. . . . . . .  C ADDR   0196H   A   
WAIT4. . . . . . .  C ADDR   0198H   A   
WCOL . . . . . . .  B ADDR   00F8H.6 A   
WDTCN. . . . . . .  D ADDR   00FFH   A   
XBR0 . . . . . . .  D ADDR   00E1H   A   
XBR1 . . . . . . .  D ADDR   00E2H   A   
XBR2 . . . . . . .  D ADDR   00E3H   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
